# -*- coding: utf-8 -*-
"""Copy of basic_ipython_nb_demo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/gawron/python-for-social-science/blob/master/intro/basic_ipython_nb_demo.ipynb
"""

a = 10

print(a)

import time
time.sleep(5)
print(a)

pwd

import numpy

numpy.random.randn()

dict

x = 1
y = 4
z = y/(1-x)

# Commented out IPython magic to ensure Python compatibility.
# %pylab inline

help(pylab)
None

"""Using the next cell as your example, you can load the code for ANY pylab demo in the
following index.

     http://matplotlib.org/mpl_examples/showcase/index.html
"""

# Commented out IPython magic to ensure Python compatibility.
# %load http://matplotlib.org/mpl_examples/showcase/integral_demo.py

# implement the example graphs/integral from pylab doocs
from pylab import *
from matplotlib.patches import Polygon

def func(x):
    return (x-3)*(x-5)*(x-7)+85

ax = subplot(111, label ='ax1')

a, b = 2, 9 # integral area
x = arange(0, 10, 0.01)
y = func(x)
plot(x, y, linewidth=1)

# make the shaded region
ix = arange(a, b, 0.01)
iy = func(ix)
verts = [(a,0)] + list(zip(ix,iy)) + [(b,0)]
poly = Polygon(verts, facecolor='0.8', edgecolor='k')
ax.add_patch(poly)

text(0.5 * (a + b), 30,
     r"$\int_a^b f(x)\mathrm{d}x$", horizontalalignment='center',
     fontsize=20)

axis([0,10, 0, 180])
figtext(0.9, 0.05, 'x')
figtext(0.1, 0.9, 'y')
ax.set_xticks((a,b))
ax.set_xticklabels(('a','b'))
ax.set_yticks([])

# implement the example graphs/integral from pylab docs
from pylab import *
from matplotlib.patches import Polygon

"""First we define a function"""

def func(x):
    return (x-3)*(x-5)*(x-7)+85

"""Next we define an axis for a new plot, and define two arrays of numbers that are going to be plotted on it."""

ax = subplot(111)

a, b = 2, 9 # integral area
x = arange(0, 10, 0.01)
y = func(x)

"""Now we plot the y array against the x array."""

plot(x, y, linewidth=1)
show()

"""Now we are going to add a shaded polygon to the display."""

ax = subplot(111)
axis([0,10, 0, 180])

a, b = 2, 9 # integral area
x = arange(0, 10, 0.01)
y = func(x)

plot(x, y, linewidth=1)

# Make the shaded region
ix = arange(a, b, 0.01)
iy = func(ix)
verts = [(a,0)] + list(zip(ix,iy)) + [(b,0)]
poly = Polygon(verts, facecolor='0.8', edgecolor='k')
ax.add_patch(poly)
show()

"""Next we add some text inside the polygon."""

ax = subplot(111)

a, b = 2, 9 # integral area
x = arange(0, 10, 0.01)
y = func(x)

plot(x, y, linewidth=1)

# Make the shaded region
ix = arange(a, b, 0.01)
iy = func(ix)
verts = [(a,0)] + list(zip(ix,iy)) + [(b,0)]
poly = Polygon(verts, facecolor='0.8', edgecolor='k')
ax.add_patch(poly)
text(0.5 * (a + b), 30,
     r"$\int_a^b f(x)\mathrm{d}x$", horizontalalignment='center',
     fontsize=20)

axis([0,10, 0, 180])
figtext(0.9, 0.05, 'x')
figtext(0.1, 0.9, 'y')
ax.set_xticks((a,b))
ax.set_xticklabels(('a','b'))
ax.set_yticks([])
show()

import time, sys
for i in range(8):
    print(i)
    time.sleep(0.5)

for i in range(50):
    print(i)

import sys

# Commented out IPython magic to ensure Python compatibility.
# %%capture
# print('hi, stdout')
# print('hi, stderr', file=sys.stderr)

# Commented out IPython magic to ensure Python compatibility.
# %%capture captured
# print('hi, stdout')
# print('hi, stderr', file=sys.stderr)

captured

captured()

captured.stdout

import matplotlib.pyplot as plt
import numpy as np

x = np.linspace(0, 3*np.pi, 500)
plt.plot(x, np.sin(x**2))
plt.title('A simple chirp');

def hello (name=None):
    if name is not None:
        print('Hello, %s' % (name,))
    else:
        print('Hello, world!')

hello()
hello('Fred')

"""## Multimedia notebooks"""

from IPython.display import HTML, SVG, YouTubeVideo
HTML('''
         <table style="border: 2px solid black;">
         ''' + 
         ''.join(['<tr>' + 
                  ''.join(['<td>{row},{col}</td>'.format(
                                 row=row, col=col
                                 ) for col in range(5)]) +
                  '</tr>' for row in range(5)]) +
         '''
         </table>
         ''')

SVG('''<svg width="600" height="80">''' + 
         ''.join(['''<circle cx="{x}" cy="{y}" r="{r}"
                             fill="red"
                             stroke-width="2"
                             stroke="black">
                     </circle>'''.format(x=(30+3*i)*(10-i),
                                         y=30,
                                         r=3.*float(i)
                                         ) for i in range(10)]) + 
         '''</svg>''')

YouTubeVideo('iV2ViNJFZC8')

YouTubeVideo('dNvAUobb1y4')

